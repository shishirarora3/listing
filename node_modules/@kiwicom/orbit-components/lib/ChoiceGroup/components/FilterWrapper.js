"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _defaultTheme = _interopRequireDefault(require("../../defaultTheme"));

var _ButtonLink = _interopRequireDefault(require("../../ButtonLink"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var StyledOnlyButton = (0, _styledComponents.default)(_ButtonLink.default).withConfig({
  displayName: "FilterWrapper__StyledOnlyButton",
  componentId: "sc-1cpg3jn-0"
})([""]);

var StyledContentWrapper = _styledComponents.default.div.withConfig({
  displayName: "FilterWrapper__StyledContentWrapper",
  componentId: "sc-1cpg3jn-1"
})(["width:100%;padding:0px 4px;border-radius:4px;display:flex;align-items:center;&:hover,&:focus-within{background-color:", ";", "{visibility:visible;opacity:1;}}", "{visibility:hidden;opacity:0;}"], function (_ref) {
  var theme = _ref.theme;
  return theme.orbit.paletteBlueLight;
}, StyledOnlyButton, StyledOnlyButton);

StyledContentWrapper.defaultProps = {
  theme: _defaultTheme.default
};

var FilterWrapper = function FilterWrapper(_ref2) {
  var child = _ref2.child,
      children = _ref2.children,
      onOnlySelection = _ref2.onOnlySelection;
  return React.createElement(StyledContentWrapper, null, children, onOnlySelection && React.createElement(StyledOnlyButton, {
    type: "secondary",
    size: "small",
    onClick: function onClick(ev) {
      onOnlySelection(ev, {
        value: child.props.value,
        label: child.props.label
      });
    },
    transparent: true
  }, "Only "));
};

var _default = FilterWrapper;
exports.default = _default;