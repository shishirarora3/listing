"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _styledComponents = require("styled-components");

var _getJustify = _interopRequireDefault(require("./getJustify"));

var _getDirection = _interopRequireDefault(require("./getDirection"));

var _getWidth = _interopRequireDefault(require("./getWidth"));

var _getDisplay = _interopRequireDefault(require("./getDisplay"));

var _getShrink = _interopRequireDefault(require("./getShrink"));

var _getWrap = _interopRequireDefault(require("./getWrap"));

var _getGrow = _interopRequireDefault(require("./getGrow"));

var _getAlign = _interopRequireDefault(require("./getAlign"));

var _index = _interopRequireDefault(require("../../common/getSpacingToken/index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getViewportFlexStyles = function getViewportFlexStyles(viewport) {
  return function (props) {
    var flex = props.flex,
        theme = props.theme;
    var _props$viewport = props[viewport],
        inline = _props$viewport.inline,
        direction = _props$viewport.direction,
        wrap = _props$viewport.wrap,
        grow = _props$viewport.grow,
        shrink = _props$viewport.shrink,
        basis = _props$viewport.basis,
        justify = _props$viewport.justify,
        align = _props$viewport.align,
        spaceAfter = _props$viewport.spaceAfter;
    return (0, _styledComponents.css)(["", ";width:", ";margin-bottom:", ";"], flex && (0, _styledComponents.css)(["display:", ";flex-direction:", ";flex-wrap:", ";flex-grow:", ";flex-shrink:", ";flex-basis:", ";justify-content:", ";align-content:", ";align-items:", ";"], (0, _getDisplay.default)(inline), (0, _getDirection.default)(direction), (0, _getWrap.default)(wrap), (0, _getGrow.default)(grow), (0, _getShrink.default)(shrink), basis, (0, _getJustify.default)(justify), (0, _getAlign.default)(align), (0, _getAlign.default)(align)), (0, _getWidth.default)(inline), (0, _index.default)({
      spaceAfter: spaceAfter,
      theme: theme
    }));
  };
};

var _default = getViewportFlexStyles;
exports.default = _default;