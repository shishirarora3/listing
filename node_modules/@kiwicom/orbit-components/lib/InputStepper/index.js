"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _consts = require("../InputField/consts");

var _PlusCircle = _interopRequireDefault(require("../icons/PlusCircle"));

var _MinusCircle = _interopRequireDefault(require("../icons/MinusCircle"));

var _ButtonLink = _interopRequireDefault(require("../ButtonLink"));

var _InputField = _interopRequireWildcard(require("../InputField"));

var _defaultTheme = _interopRequireDefault(require("../defaultTheme"));

var _keyMaps = _interopRequireDefault(require("../common/keyMaps"));

var _getSpacingToken = _interopRequireDefault(require("../common/getSpacingToken"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var PrefixSuffix = (0, _styledComponents.default)(function (_ref) {
  var type = _ref.type,
      props = _objectWithoutProperties(_ref, ["type"]);

  return React.createElement("div", props);
}).withConfig({
  displayName: "InputStepper__PrefixSuffix",
  componentId: "sc-1kqzp6i-0"
})(["flex-shrink:0;z-index:3;cursor:", ";"], function (_ref2) {
  var disabled = _ref2.disabled;
  return disabled && "not-allowed";
});
PrefixSuffix.defaultProps = {
  theme: _defaultTheme.default
};

var StyledInputStepper = _styledComponents.default.div.withConfig({
  displayName: "InputStepper__StyledInputStepper",
  componentId: "sc-1kqzp6i-1"
})(["width:100%;margin-bottom:", ";", "{text-align:center;}", "{padding:0;pointer-events:auto;}"], _getSpacingToken.default, _InputField.Input, _InputField.Prefix);

StyledInputStepper.defaultProps = {
  theme: _defaultTheme.default
};

var StyledButtonWrapper = _styledComponents.default.div.withConfig({
  displayName: "InputStepper__StyledButtonWrapper",
  componentId: "sc-1kqzp6i-2"
})(["&:focus{outline:none;box-shadow:0 0 1px 1px ", ",0 0 1px 3px rgba(1,118,210,0.6);}&:focus:active{box-shadow:none;}"], function (_ref3) {
  var theme = _ref3.theme;
  return theme.orbit.colorTextButtonWhiteBordered;
});

StyledButtonWrapper.defaultProps = {
  theme: _defaultTheme.default
};

var InputStepper =
/*#__PURE__*/
function (_React$Component) {
  _inherits(InputStepper, _React$Component);

  function InputStepper() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, InputStepper);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InputStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      value: _this.props.defaultValue || 0
    });

    _defineProperty(_assertThisInitialized(_this), "setValueAndInjectCallback", function (value) {
      var onChange = _this.props.onChange;

      if (onChange) {
        onChange(value);
      }

      _this.setState({
        value: value
      });
    });

    _defineProperty(_assertThisInitialized(_this), "incrementCounter", function () {
      var value = _this.state.value;
      var _this$props = _this.props,
          _this$props$maxValue = _this$props.maxValue,
          maxValue = _this$props$maxValue === void 0 ? Number.POSITIVE_INFINITY : _this$props$maxValue,
          _this$props$step = _this$props.step,
          step = _this$props$step === void 0 ? 1 : _this$props$step;
      var newValue = value + step;
      var stateValue = newValue >= +maxValue ? maxValue : newValue;

      if (stateValue !== value) {
        _this.setValueAndInjectCallback(stateValue);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "decrementCounter", function () {
      var value = _this.state.value;
      var _this$props2 = _this.props,
          _this$props2$minValue = _this$props2.minValue,
          minValue = _this$props2$minValue === void 0 ? Number.NEGATIVE_INFINITY : _this$props2$minValue,
          _this$props2$step = _this$props2.step,
          step = _this$props2$step === void 0 ? 1 : _this$props2$step;
      var newValue = value - step;
      var stateValue = newValue <= +minValue ? minValue : newValue;

      if (stateValue !== value) {
        _this.setValueAndInjectCallback(stateValue);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleKeyDown", function (ev) {
      if (ev.keyCode === _keyMaps.default.ARROW_DOWN) {
        ev.preventDefault();

        _this.decrementCounter();
      }

      if (ev.keyCode === _keyMaps.default.ARROW_UP) {
        ev.preventDefault();

        _this.incrementCounter();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleChange", function (ev) {
      var _this$props3 = _this.props,
          _this$props3$minValue = _this$props3.minValue,
          minValue = _this$props3$minValue === void 0 ? Number.NEGATIVE_INFINITY : _this$props3$minValue,
          _this$props3$maxValue = _this$props3.maxValue,
          maxValue = _this$props3$maxValue === void 0 ? Number.POSITIVE_INFINITY : _this$props3$maxValue;
      var value = ev && parseInt(ev.target.value, 10);

      if (Number.isInteger(value) && value >= minValue && value <= maxValue) {
        _this.setState({
          value: value
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleKeyDecrement", function (ev) {
      if (ev.keyCode === _keyMaps.default.SPACE) {
        ev.preventDefault();

        _this.decrementCounter();
      } else if (ev.keyCode === _keyMaps.default.ENTER) {
        _this.decrementCounter();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleKeyIncrement", function (ev) {
      if (ev.keyCode === _keyMaps.default.SPACE) {
        ev.preventDefault();

        _this.incrementCounter();
      } else if (ev.keyCode === _keyMaps.default.ENTER) {
        _this.incrementCounter();
      }
    });

    return _this;
  }

  _createClass(InputStepper, [{
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
          label = _this$props4.label,
          error = _this$props4.error,
          onBlur = _this$props4.onBlur,
          onFocus = _this$props4.onFocus,
          help = _this$props4.help,
          disabled = _this$props4.disabled,
          name = _this$props4.name,
          dataTest = _this$props4.dataTest,
          _this$props4$size = _this$props4.size,
          size = _this$props4$size === void 0 ? _consts.SIZE_OPTIONS.NORMAL : _this$props4$size,
          maxValue = _this$props4.maxValue,
          minValue = _this$props4.minValue,
          required = _this$props4.required,
          tabIndex = _this$props4.tabIndex,
          forwardedRef = _this$props4.forwardedRef,
          spaceAfter = _this$props4.spaceAfter;
      var value = this.state.value;
      return React.createElement(StyledInputStepper, {
        spaceAfter: spaceAfter
      }, React.createElement(_InputField.default, {
        dataTest: dataTest,
        size: size,
        label: label,
        disabled: disabled,
        required: required,
        name: name,
        error: error,
        help: help,
        type: "number",
        onChange: this.handleChange,
        onBlur: onBlur,
        onFocus: onFocus,
        onKeyDown: this.handleKeyDown,
        value: value || 0,
        minValue: minValue,
        maxValue: maxValue,
        tabIndex: tabIndex,
        ref: forwardedRef,
        prefix: React.createElement(StyledButtonWrapper, {
          role: "button",
          tabIndex: "0",
          onKeyDown: this.handleKeyDecrement
        }, React.createElement(_ButtonLink.default, {
          disabled: disabled || value <= +minValue,
          iconLeft: React.createElement(_MinusCircle.default, {
            color: "secondary"
          }),
          size: size,
          onClick: this.decrementCounter,
          transparent: true,
          component: PrefixSuffix
        })),
        suffix: React.createElement(StyledButtonWrapper, {
          role: "button",
          tabIndex: "0",
          onKeyDown: this.handleKeyIncrement
        }, React.createElement(_ButtonLink.default, {
          disabled: disabled || value >= +maxValue,
          iconLeft: React.createElement(_PlusCircle.default, {
            color: "secondary"
          }),
          size: size,
          onClick: this.incrementCounter,
          transparent: true,
          component: PrefixSuffix
        }))
      }));
    }
  }]);

  return InputStepper;
}(React.Component); // $FlowExpected


var ForwardedInputStepper = React.forwardRef(function (props, ref) {
  return React.createElement(InputStepper, _extends({
    forwardedRef: ref
  }, props));
});
ForwardedInputStepper.displayName = "InputStepper";
var _default = ForwardedInputStepper;
exports.default = _default;