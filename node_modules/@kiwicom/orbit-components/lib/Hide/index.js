"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _mediaQuery = _interopRequireDefault(require("../utils/mediaQuery"));

var _consts = require("../utils/mediaQuery/consts");

var _defaultTheme = _interopRequireDefault(require("../defaultTheme"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var getDisplay = function getDisplay() {
  return function (_ref) {
    var block = _ref.block;
    return block ? "block" : "inline-block";
  };
};

var StyledHide = _styledComponents.default.span.withConfig({
  displayName: "Hide__StyledHide",
  componentId: "ji2pgq-0"
})(["", ";"], function (_ref2) {
  var on = _ref2.on;
  return _consts.DEVICES.map(function (viewport) {
    return viewport in _mediaQuery.default ? (0, _styledComponents.css)(["", ";"], _mediaQuery.default[viewport]((0, _styledComponents.css)(["display:", ";"], on.indexOf(viewport) !== -1 ? "none" : getDisplay()))) : // "smallMobile" is not media query so we need to check it explicitly
    viewport === "smallMobile" && on.indexOf(viewport) !== -1 && (0, _styledComponents.css)(["display:none;"]);
  });
});

StyledHide.defaultProps = {
  theme: _defaultTheme.default
};

var Hide = function Hide(_ref3) {
  var _ref3$on = _ref3.on,
      on = _ref3$on === void 0 ? [] : _ref3$on,
      block = _ref3.block,
      children = _ref3.children;
  return React.createElement(StyledHide, {
    on: on,
    block: block
  }, children);
};

var _default = Hide;
exports.default = _default;