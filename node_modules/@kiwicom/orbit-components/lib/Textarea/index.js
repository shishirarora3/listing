"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _defaultTheme = _interopRequireDefault(require("../defaultTheme"));

var _FormFeedback = _interopRequireDefault(require("../FormFeedback"));

var _FormLabel = _interopRequireDefault(require("../FormLabel"));

var _consts = require("./consts");

var _rtl = require("../utils/rtl");

var _getSpacingToken = _interopRequireDefault(require("../common/getSpacingToken"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Field = _styledComponents.default.label.withConfig({
  displayName: "Textarea__Field",
  componentId: "sc-1ezoqgy-0"
})(["font-family:", ";display:flex;width:100%;height:", ";flex-direction:column;position:relative;flex:", ";margin-bottom:", ";"], function (_ref) {
  var theme = _ref.theme;
  return theme.orbit.fontFamily;
}, function (_ref2) {
  var fullHeight = _ref2.fullHeight;
  return fullHeight && "100%";
}, function (_ref3) {
  var fullHeight = _ref3.fullHeight;
  return fullHeight && "1";
}, _getSpacingToken.default);

Field.defaultProps = {
  theme: _defaultTheme.default
};

var getFontSize = function getFontSize() {
  return function (_ref4) {
    var _tokens;

    var theme = _ref4.theme,
        size = _ref4.size;
    var tokens = (_tokens = {}, _defineProperty(_tokens, _consts.SIZE_OPTIONS.SMALL, theme.orbit.fontSizeInputSmall), _defineProperty(_tokens, _consts.SIZE_OPTIONS.NORMAL, theme.orbit.fontSizeInputNormal), _tokens);
    return tokens[size];
  };
};

var getPadding = function getPadding() {
  return function (_ref5) {
    var _tokens2;

    var theme = _ref5.theme,
        size = _ref5.size;
    var tokens = (_tokens2 = {}, _defineProperty(_tokens2, _consts.SIZE_OPTIONS.SMALL, theme.orbit.paddingTextareaSmall), _defineProperty(_tokens2, _consts.SIZE_OPTIONS.NORMAL, theme.orbit.paddingTextareaNormal), _tokens2);
    return (0, _rtl.rtlSpacing)(tokens[size]);
  };
};

var StyledTextArea = _styledComponents.default.textarea.withConfig({
  displayName: "Textarea__StyledTextArea",
  componentId: "sc-1ezoqgy-1"
})(["appearance:none;box-sizing:border-box;display:block;width:100%;height:", ";padding:", ";border-radius:", ";box-shadow:inset 0 0 0 ", ";background-color:", ";color:", ";font-size:", ";line-height:", ";cursor:", ";font-family:", ";resize:", ";transition:box-shadow ", " ease-in-out;flex:", ";border:1px solid transparent;overflow:auto;&::placeholder{color:", ";}&:hover{box-shadow:", ";}&:focus{box-shadow:", ";outline:none;}"], function (_ref6) {
  var fullHeight = _ref6.fullHeight;
  return fullHeight && "100%";
}, getPadding(), function (_ref7) {
  var theme = _ref7.theme;
  return theme.orbit.borderRadiusNormal;
}, function (_ref8) {
  var theme = _ref8.theme,
      error = _ref8.error;
  return "".concat(theme.orbit.borderWidthInput, " ").concat(error ? theme.orbit.borderColorInputError : theme.orbit.borderColorInput);
}, function (_ref9) {
  var disabled = _ref9.disabled,
      theme = _ref9.theme;
  return disabled ? theme.orbit.backgroundInputDisabled : theme.orbit.backgroundInput;
}, function (_ref10) {
  var disabled = _ref10.disabled,
      theme = _ref10.theme;
  return disabled ? theme.orbit.colorTextInputDisabled : theme.orbit.colorTextInput;
}, getFontSize(), function (_ref11) {
  var theme = _ref11.theme;
  return theme.orbit.lineHeightText;
}, function (_ref12) {
  var disabled = _ref12.disabled;
  return disabled ? "not-allowed" : "text";
}, function (_ref13) {
  var theme = _ref13.theme;
  return theme.orbit.fontFamily;
}, function (_ref14) {
  var resize = _ref14.resize;
  return resize;
}, function (_ref15) {
  var theme = _ref15.theme;
  return theme.orbit.durationFast;
}, function (_ref16) {
  var fullHeight = _ref16.fullHeight;
  return fullHeight && "1";
}, function (_ref17) {
  var theme = _ref17.theme;
  return theme.orbit.colorPlaceholderInput;
}, function (_ref18) {
  var disabled = _ref18.disabled,
      theme = _ref18.theme,
      error = _ref18.error;
  return !disabled && "inset 0 0 0 ".concat(theme.orbit.borderWidthInput, " ").concat(error ? theme.orbit.borderColorInputErrorHover : theme.orbit.borderColorInputHover);
}, function (_ref19) {
  var theme = _ref19.theme,
      disabled = _ref19.disabled;
  return !disabled && "inset 0 0 0 2px ".concat(theme.orbit.borderColorInputFocus);
});

StyledTextArea.defaultProps = {
  theme: _defaultTheme.default
}; // $FlowExpected

var Textarea = React.forwardRef(function (props, ref) {
  var _props$size = props.size,
      size = _props$size === void 0 ? _consts.SIZE_OPTIONS.NORMAL : _props$size,
      disabled = props.disabled,
      _props$resize = props.resize,
      resize = _props$resize === void 0 ? _consts.RESIZE_OPTIONS.VERTICAL : _props$resize,
      dataTest = props.dataTest,
      spaceAfter = props.spaceAfter;
  return React.createElement(Field, {
    fullHeight: props.fullHeight,
    spaceAfter: spaceAfter
  }, props.label && React.createElement(_FormLabel.default, {
    filled: !!props.value,
    disabled: disabled
  }, props.label), React.createElement(StyledTextArea, {
    "data-test": dataTest,
    name: props.name,
    value: props.value,
    size: size,
    fullHeight: props.fullHeight,
    disabled: disabled,
    error: props.error,
    placeholder: props.placeholder,
    maxLength: props.maxLength,
    onChange: props.onChange,
    onFocus: props.onFocus,
    onBlur: props.onBlur,
    resize: resize,
    tabIndex: props.tabIndex,
    ref: ref
  }), props.help && !props.error && React.createElement(_FormFeedback.default, {
    type: "help"
  }, props.help), props.error && React.createElement(_FormFeedback.default, {
    type: "error"
  }, props.error));
});
Textarea.displayName = "Textarea";
var _default = Textarea;
exports.default = _default;