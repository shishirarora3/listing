"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _defaultTheme = _interopRequireDefault(require("../../defaultTheme"));

var _mediaQuery = _interopRequireDefault(require("../../utils/mediaQuery"));

var _Button = _interopRequireDefault(require("../../Button"));

var _resolvePopoverPosition = _interopRequireDefault(require("../helpers/resolvePopoverPosition"));

var _resolvePopoverHorizontal = _interopRequireDefault(require("../helpers/resolvePopoverHorizontal"));

var _calculatePopoverPosition = _interopRequireDefault(require("../helpers/calculatePopoverPosition"));

var _useDimensions = _interopRequireDefault(require("../hooks/useDimensions"));

var _useVerticalPosition = _interopRequireDefault(require("../hooks/useVerticalPosition"));

var _useHorizontalPosition = _interopRequireDefault(require("../hooks/useHorizontalPosition"));

var _Translate = _interopRequireDefault(require("../../Translate"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var showAnimation = (0, _styledComponents.keyframes)(["from{transform:translateY(100%);}to{transform:translateY(0);}"]);
var opacityAnimation = (0, _styledComponents.keyframes)(["from{opacity:0;}to{opacity:1;}"]);

var StyledPopoverParent = _styledComponents.default.div.withConfig({
  displayName: "ContentWrapper__StyledPopoverParent",
  componentId: "v01g55-0"
})(["position:fixed;bottom:0;left:0;right:0;width:100%;box-sizing:border-box;border-top-left-radius:9px;border-top-right-radius:9px;animation:", " ", " linear;background-color:", ";padding:", ";box-shadow:", ";overflow:hidden;z-index:1000;&:focus{outline:0;}", ""], showAnimation, function (_ref) {
  var theme = _ref.theme;
  return theme.orbit.durationFast;
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.orbit.backgroundModal;
}, function (_ref3) {
  var theme = _ref3.theme,
      noPadding = _ref3.noPadding;
  return noPadding ? 0 : theme.orbit.spaceMedium;
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme.orbit.boxShadowElevatedLevel1;
}, _mediaQuery.default.largeMobile((0, _styledComponents.css)(["position:absolute;left:auto;right:auto;bottom:auto;width:", ";animation:", " ", " linear;border-radius:", ";", " ", ""], function (_ref5) {
  var width = _ref5.width;
  return width ? "".concat(width) : "auto";
}, opacityAnimation, function (_ref6) {
  var theme = _ref6.theme;
  return theme.orbit.durationFast;
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.orbit.borderRadiusNormal;
}, _resolvePopoverPosition.default, _resolvePopoverHorizontal.default)));

StyledPopoverParent.defaultProps = {
  theme: _defaultTheme.default
};

var StyledPopoverContent = _styledComponents.default.div.withConfig({
  displayName: "ContentWrapper__StyledPopoverContent",
  componentId: "v01g55-1"
})([""]);

var StyledOverlay = _styledComponents.default.div.withConfig({
  displayName: "ContentWrapper__StyledOverlay",
  componentId: "v01g55-2"
})(["display:block;position:fixed;top:0;left:0;right:0;width:100%;height:100%;background-color:rgba(23,27,30,0.6);animation:", " ", " ease-in;z-index:999;", ";"], opacityAnimation, function (_ref8) {
  var theme = _ref8.theme;
  return theme.orbit.durationFast;
}, _mediaQuery.default.largeMobile((0, _styledComponents.css)(["background-color:transparent;"])));

StyledOverlay.defaultProps = {
  theme: _defaultTheme.default
};

var StyledPopoverClose = _styledComponents.default.div.withConfig({
  displayName: "ContentWrapper__StyledPopoverClose",
  componentId: "v01g55-3"
})(["padding:", ";padding-top:", ";", ""], function (_ref9) {
  var theme = _ref9.theme,
      noPadding = _ref9.noPadding;
  return noPadding ? theme.orbit.spaceMedium : 0;
}, function (_ref10) {
  var theme = _ref10.theme;
  return theme.orbit.spaceMedium;
}, _mediaQuery.default.largeMobile((0, _styledComponents.css)(["display:none;visibility:hidden;padding-bottom:0;"])));

StyledPopoverClose.defaultProps = {
  theme: _defaultTheme.default
};

var PopoverContentWrapper = function PopoverContentWrapper(_ref11) {
  var children = _ref11.children,
      onClose = _ref11.onClose,
      width = _ref11.width,
      dataTest = _ref11.dataTest,
      preferredPosition = _ref11.preferredPosition,
      containerRef = _ref11.containerRef,
      noPadding = _ref11.noPadding;
  var popover = (0, _react.useRef)(null);
  var content = (0, _react.useRef)(null);
  var overlay = (0, _react.useRef)(null);
  var position = (0, _calculatePopoverPosition.default)(preferredPosition);
  var dimensions = (0, _useDimensions.default)({
    containerRef: containerRef,
    popover: popover,
    content: content
  });
  var verticalPosition = (0, _useVerticalPosition.default)(position[0], dimensions);
  var horizontalPosition = (0, _useHorizontalPosition.default)(position[1], dimensions);

  var handleClick = function handleClick(ev) {
    ev.stopPropagation();

    if (ev.target === (overlay === null || overlay === void 0 ? void 0 : overlay.current)) {
      onClose();
    }
  };

  (0, _react.useEffect)(function () {
    if (popover.current) {
      popover.current.focus();
    }
  }, []);
  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(StyledOverlay, {
    ref: overlay,
    onClick: handleClick
  }), _react.default.createElement(StyledPopoverParent, {
    anchor: horizontalPosition,
    position: verticalPosition,
    containerTop: dimensions.containerTop,
    containerLeft: dimensions.containerLeft,
    containerHeight: dimensions.containerHeight,
    containerWidth: dimensions.containerWidth,
    popoverHeight: dimensions.popoverHeight,
    popoverWidth: dimensions.popoverWidth,
    width: width,
    ref: popover,
    onClick: handleClick,
    tabIndex: "0",
    "data-test": dataTest,
    noPadding: noPadding,
    role: "tooltip"
  }, _react.default.createElement(StyledPopoverContent, {
    ref: content
  }, children, _react.default.createElement(StyledPopoverClose, {
    noPadding: noPadding
  }, _react.default.createElement(_Button.default, {
    type: "secondary",
    block: true,
    onClick: onClose
  }, _react.default.createElement(_Translate.default, {
    tKey: "button_close"
  }))))));
};

var _default = PopoverContentWrapper;
exports.default = _default;