import * as React from "react";
import styled from "styled-components";
import defaultTheme from "../defaultTheme";
import Button from "../Button";
import ChevronLeft from "../icons/ChevronLeft";
const StyledBreadcrumbs = styled.nav.withConfig({
  displayName: "Breadcrumbs__StyledBreadcrumbs",
  componentId: "sc-1zqkwq-0"
})(["font-family:", ";font-size:", ";"], ({
  theme
}) => theme.orbit.fontFamily, ({
  theme
}) => theme.orbit.fontSizeTextSmall);
StyledBreadcrumbs.defaultProps = {
  theme: defaultTheme
};
const StyledBreadcrumbsList = styled.ol.withConfig({
  displayName: "Breadcrumbs__StyledBreadcrumbsList",
  componentId: "sc-1zqkwq-1"
})(["display:flex;flex-wrap:wrap;list-style:none;margin:0;padding:0;"]);
const StyledBackButtonWrapper = styled.span.withConfig({
  displayName: "Breadcrumbs__StyledBackButtonWrapper",
  componentId: "sc-1zqkwq-2"
})(["margin-right:", ";"], ({
  theme
}) => theme.orbit.spaceSmall);
StyledBackButtonWrapper.defaultProps = {
  theme: defaultTheme
};

const Breadcrumbs = ({
  children,
  dataTest,
  onGoBack
}) => React.createElement(StyledBreadcrumbs, {
  "aria-label": "Breadcrumb",
  role: "navigation",
  "data-test": dataTest
}, React.createElement(StyledBreadcrumbsList, {
  vocab: "http://schema.org/",
  typeof: "BreadcrumbList"
}, onGoBack && React.createElement(StyledBackButtonWrapper, null, React.createElement(Button, {
  iconLeft: React.createElement(ChevronLeft, null),
  circled: true,
  type: "secondary",
  size: "small",
  onClick: onGoBack
})), React.Children.map(children, (item, key) => {
  return React.cloneElement(item, {
    active: key === React.Children.count(children) - 1,
    contentKey: key + 1
  });
})));

export default Breadcrumbs;
export { default as BreadcrumbsItem } from "./BreadcrumbsItem";